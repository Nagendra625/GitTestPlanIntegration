# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
      - '*'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  create:
    tags:
      - v*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./create-new-angualr
    strategy:
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell test2
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
    
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/create-new-angualr/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build
        run: |
          npm i
          npm run build:prod
          
      # Custom Action Trigger from current solution
      - name: AZTCU
        id: actionTrigger
        uses: Nagendra625/JavascriptAction@v1.8
        with:
          organizationId: 'I29603'
          projectId: 'I29603'
          testplanid: 1
          testsuiteid: 2
          PAT_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
          
       
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.actionTrigger.outputs.time }}"
        
      # Create Release Artifacts
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release artifact
          path: |
            dist
            !dist/**/*.md

      # pushing build to releases
      - name: Push Build to Releases
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "dist/*"
          tag: 'v1.18.10'
          
       # Run this to call Azure Pipeline
      - name: Azure Pipelines Action
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: https://dev.azure.com/I29603/I29603
          azure-pipeline-name: 'Run Git App'
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
          azure-pipeline-variables:  '{"SWBuildNumber": "13", "APPSERVER": "https://dev.navigator.cyber.verisk.com"}' # optional stringified json
        
